From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: DoctaEnkoda <bierquejason@gmail.com>
Date: Tue, 3 Jan 2023 03:32:37 +0100
Subject: [PATCH] Event When Player Join Leave

Add PlayerLeaveExternalServerEvent when Player Leave an External Server
Add PlayerJoinExternalServerEvent when Player Join an External Server

Beware, this does not replace PlayerJoinEvent and PlayerQuitEvent but still allows to know when a player leaves a server on another instance.

diff --git a/src/main/java/puregero/multipaper/event/player/PlayerJoinExternalServerEvent.java b/src/main/java/puregero/multipaper/event/player/PlayerJoinExternalServerEvent.java
new file mode 100644
index 0000000000000000000000000000000000000000..4f5ce84ed3d9633a145dd035dd4fb6fd348dcaf0
--- /dev/null
+++ b/src/main/java/puregero/multipaper/event/player/PlayerJoinExternalServerEvent.java
@@ -0,0 +1,49 @@
+package puregero.multipaper.event.player;
+
+import org.bukkit.Bukkit;
+import org.bukkit.event.Event;
+import org.bukkit.event.HandlerList;
+import org.jetbrains.annotations.NotNull;
+
+import java.util.UUID;
+
+/**
+ * Called when a player joins an external MultiPaper instance.
+ */
+public class PlayerJoinExternalServerEvent extends Event {
+
+    private static final HandlerList handlers = new HandlerList();
+    private final UUID playerUniqueId;
+    private final String playerName;
+
+
+    public PlayerJoinExternalServerEvent(UUID playerUniqueId, String playerName) {
+        super(!Bukkit.isPrimaryThread());
+        this.playerUniqueId = playerUniqueId;
+        this.playerName = playerName;
+    }
+
+    /**
+     * Returns the name of this player
+     */
+    public String getPlayerName() {
+        return this.playerName;
+    }
+
+    /**
+     * Returns a unique and persistent id for this entity
+     */
+    public UUID getPlayerUniqueId() {
+        return this.playerUniqueId;
+    }
+
+    @Override
+    public @NotNull HandlerList getHandlers() {
+        return handlers;
+    }
+
+    @NotNull
+    public static HandlerList getHandlerList() {
+        return handlers;
+    }
+}
diff --git a/src/main/java/puregero/multipaper/event/player/PlayerLeaveExternalServerEvent.java b/src/main/java/puregero/multipaper/event/player/PlayerLeaveExternalServerEvent.java
new file mode 100644
index 0000000000000000000000000000000000000000..33a39d9d8740ce206b552c60e065c20b3f650491
--- /dev/null
+++ b/src/main/java/puregero/multipaper/event/player/PlayerLeaveExternalServerEvent.java
@@ -0,0 +1,50 @@
+package puregero.multipaper.event.player;
+
+import org.bukkit.Bukkit;
+import org.bukkit.event.Event;
+import org.bukkit.event.HandlerList;
+import org.jetbrains.annotations.NotNull;
+
+import java.util.UUID;
+
+/**
+ * Called when a player leave an external MultiPaper instance.
+ */
+public class PlayerLeaveExternalServerEvent extends Event {
+
+
+    private static final HandlerList handlers = new HandlerList();
+    private final UUID playerUniqueId;
+    private final String playerName;
+
+
+    public PlayerLeaveExternalServerEvent(UUID playerUniqueId, String playerName) {
+        super(!Bukkit.isPrimaryThread());
+        this.playerUniqueId = playerUniqueId;
+        this.playerName = playerName;
+    }
+
+    /**
+     * Returns the name of this player
+     */
+    public String getPlayerName() {
+        return this.playerName;
+    }
+
+    /**
+     * Returns a unique and persistent id for this entity
+     */
+    public UUID getPlayerUniqueId() {
+        return this.playerUniqueId;
+    }
+
+    @Override
+    public @NotNull HandlerList getHandlers() {
+        return handlers;
+    }
+
+    @NotNull
+    public static HandlerList getHandlerList() {
+        return handlers;
+    }
+}
