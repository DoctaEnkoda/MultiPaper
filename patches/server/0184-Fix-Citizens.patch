From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Bierque Jason <bierquejason@gmail.com>
Date: Wed, 11 Jan 2023 23:10:20 +0100
Subject: [PATCH] Fix Citizens


diff --git a/src/main/java/net/minecraft/stats/ServerStatsCounter.java b/src/main/java/net/minecraft/stats/ServerStatsCounter.java
index f62c4e97b294b697d5a68affa25f9904f8ea7cb7..6c05dba90767c4f0ef18be5de36d092fd5b9fdee 100644
--- a/src/main/java/net/minecraft/stats/ServerStatsCounter.java
+++ b/src/main/java/net/minecraft/stats/ServerStatsCounter.java
@@ -55,8 +55,17 @@ public class ServerStatsCounter extends StatsCounter {
         // MultiPaper start
         if (true) {
             try {
-                String json = ExternalPlayer.loadedStats.remove(UUID.fromString(this.file.getName().split("\\.")[0]));
-                if (json == null) json = MultiPaper.readStats(server.storageSource.levelDirectory.path().getFileName().toString(), this.file.getName().split("\\.")[0]);
+                // MultiPaper - DoctaEnkoda Start Fix Citizens
+                UUID uuidFile;
+                try {
+                    uuidFile = UUID.fromString(this.file.getName().split("\\.")[0]);
+                } catch (IllegalArgumentException ignored) {
+                    // not a entity
+                    return;
+                }
+                String json = ExternalPlayer.loadedStats.remove(uuidFile);
+                // MultiPaper - DoctaEnkoda End Fix Citizens
+                if (json == null) json = MultiPaper.readStats(server.storageSource.levelDirectory.path().getFileName().toString(), uuidFile.toString());
                 if (!json.isEmpty()) {
                     this.parseLocal(server.getFixerUpper(), json);
                 }
@@ -86,7 +95,17 @@ public class ServerStatsCounter extends StatsCounter {
         try {
             // MultiPaper start
             if (true) {
-                MultiPaper.writeStats(server.storageSource.levelDirectory.path().getFileName().toString(), this.file.getName().split("\\.")[0], this.toJson());
+                // MultiPaper - DoctaEnkoda Start Fix Citizens
+                UUID uuidFile;
+                try {
+                    uuidFile = UUID.fromString(this.file.getName().split("\\.")[0]);
+                } catch (IllegalArgumentException ignored) {
+                    // not a entity
+                    return;
+                }
+                String json = ExternalPlayer.loadedStats.remove(uuidFile);
+                MultiPaper.writeStats(server.storageSource.levelDirectory.path().getFileName().toString(), uuidFile.toString(), this.toJson());
+                // MultiPaper - DoctaEnkoda End Fix Citizens
                 return;
             }
             // MultiPaper end
diff --git a/src/main/java/puregero/multipaper/MultiPaper.java b/src/main/java/puregero/multipaper/MultiPaper.java
index df163434fc5245d893d23ac375bc5f27d1315d4f..7886c9ddd9ad0fb37535cd912f0f2b7b0caa6678 100644
--- a/src/main/java/puregero/multipaper/MultiPaper.java
+++ b/src/main/java/puregero/multipaper/MultiPaper.java
@@ -274,7 +274,7 @@ public class MultiPaper {
     }
 
     public static boolean isRealPlayer(Entity entity) {
-        return entity instanceof ServerPlayer && !(entity instanceof ExternalPlayer);
+        return entity instanceof ServerPlayer player && !(entity instanceof ExternalPlayer) && !player.getBukkitEntity().hasMetadata("NPC"); // MultiPaper - DoctaEnkoda Fix Citizens Check
     }
 
     public static boolean isRealPlayer(org.bukkit.entity.Entity bukkitEntity) {
@@ -282,7 +282,7 @@ public class MultiPaper {
     }
 
     public static boolean isExternalPlayer(Entity entity) {
-        return entity instanceof ExternalPlayer;
+        return entity instanceof ExternalPlayer && !entity.getBukkitEntity().hasMetadata("NPC"); // MultiPaper - DoctaEnkoda Fix Citizens Check
     }
 
     public static boolean isExternalPlayer(org.bukkit.entity.Entity bukkitEntity) {
diff --git a/src/main/java/puregero/multipaper/MultiPaperEntitiesHandler.java b/src/main/java/puregero/multipaper/MultiPaperEntitiesHandler.java
index ff7c1726c323a104bac9a9a8b3a8ea6d6414dc75..7ef7682efaca41154f3f9fb3dacd373098900fb2 100644
--- a/src/main/java/puregero/multipaper/MultiPaperEntitiesHandler.java
+++ b/src/main/java/puregero/multipaper/MultiPaperEntitiesHandler.java
@@ -349,7 +349,15 @@ public class MultiPaperEntitiesHandler {
         if (entity instanceof ExternalPlayer) return;
         if (reason == Entity.RemovalReason.UNLOADED_TO_CHUNK || reason == Entity.RemovalReason.UNLOADED_WITH_PLAYER) return;
 
-        LevelChunk chunk = entity.level.getChunkIfLoaded(entity.blockPosition());
+        // MultiPaper - DoctaEnkoda Start Fix Citizens
+        LevelChunk chunk;
+
+        if (reason == Entity.RemovalReason.KILLED) {
+            chunk = entity.level.getChunkAt(entity.blockPosition);
+        } else {
+            chunk = entity.level.getChunkIfLoaded(entity.blockPosition());
+        }
+        // MultiPaper - DoctaEnkoda End Fix Citizens
         if (chunk != null) {
             MultiPaper.broadcastPacketToExternalServers(chunk.externalEntitiesSubscribers, () -> new EntityRemovePacket(entity));
         } else {
diff --git a/src/main/java/puregero/multipaper/externalserverprotocol/RequestEntityPacket.java b/src/main/java/puregero/multipaper/externalserverprotocol/RequestEntityPacket.java
index 4f27d37e3fbdf1570f907d1eb5eaa24ea6d638c5..5087ef4ca4e4662d1ee05b976382b8d2e8ce4bab 100644
--- a/src/main/java/puregero/multipaper/externalserverprotocol/RequestEntityPacket.java
+++ b/src/main/java/puregero/multipaper/externalserverprotocol/RequestEntityPacket.java
@@ -70,6 +70,10 @@ public class RequestEntityPacket extends ExternalServerPacket {
     }
 
     private void triedToRequestPlayer(ExternalServerConnection connection, ServerPlayer serverPlayer) {
+        // MultiPaper - DoctaEnkoda Start Fix Citizens
+        if (serverPlayer.getBukkitEntity().hasMetadata("NPC"))
+            return;
+        // MultiPaper - DoctaEnkoda Stop Fix Citizens
         Pair<UUID, ExternalServerConnection> key = Pair.of(serverPlayer.getUUID(), connection);
         int count = playerRequestCounts.getOrDefault(key, 0);
         playerRequestCounts.put(key, count + 1);
